import json
import os
from collections import Counter
#
# data = ["2019-05-30", "2019-05-31", "2019-06-01", "2019-06-02", "2019-06-03", "2019-06-04", "2019-06-05", "2019-06-06",
#             "2019-06-07", "2019-06-08", "2019-06-09", "2019-06-10", "2019-06-11", "2019-06-12", "2019-06-13"]
#
# # [('10.49', 14699499), ('10.24', 7727101), ('220.1', 579082), ('180.1', 569678), ('10.39', 564760)]
# # [('10.49', 16969615), ('10.56', 12615847), ('10.60', 559290), ('10.54', 244829), ('10.64', 30085)]
# ten_fournigh1=[]
# ten_twofour=[]
# ttz_one=[]
# oez_one=[]
# ten_tn=[]
# ten_fournigh2=[]
# ten_fs=[]
# ten_sz=[]
# ten_ff=[]
# ten_sf=[]
#
# source_ip=[]
# destination_ip=[]
# path="F:/毕设相关/dataset_2/dataset_2/tcpflow/tcpflow"
#
# files=os.listdir(path)   #获得文件夹下所有文件名称
# for file in files:     #遍历所有文件
#     print(file)
#     if not os.path.isdir(file):  #判断是否是文件夹，不是文件夹才打开
#         f = open(path + '/' + file, encoding='utf-8')
#         setting = json.load(f)
#         for i in range(0, len(setting)):  # 文件行数循环
#                                #[y,x,value]  y-ip；x-data
#                 if(setting[i]['destination_ip'][0:5]=='10.49' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                         ten_fournigh1.append('['+str(setting[i]['destination_ip'])+',13]')
#                 elif (setting[i]['destination_ip'][0:5] == '10.24' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                         ten_twofour.append('['+str(setting[i]['destination_ip'])+',13]')
#                 elif (setting[i]['destination_ip'][0:5] == '220.1' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                         ttz_one.append('['+str(setting[i]['destination_ip'])+',13]')
#                 elif (setting[i]['destination_ip'][0:5] == '180.1' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                          oez_one.append('['+str(setting[i]['destination_ip'])+',13]')
#                 elif (setting[i]['destination_ip'][0:5] == '10.39' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                          ten_tn.append('['+str(setting[i]['destination_ip'])+',13]')
#                 if(setting[i]['source_ip'][0:5]=='10.49' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                          ten_fournigh2.append('['+str(setting[i]['source_ip'])+',13]')
#                 elif (setting[i]['source_ip'][0:5] == '10.56' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                         ten_fs.append('['+str(setting[i]['source_ip'])+',13]')
#                 elif (setting[i]['source_ip'][0:5] == '10.60' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                         ten_sz.append('['+str(setting[i]['source_ip'])+',13]')
#                 elif (setting[i]['source_ip'][0:5] == '10.54' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                         ten_ff.append('['+str(setting[i]['source_ip'])+',13]')
#                 elif (setting[i]['source_ip'][0:5] == '10.64' and setting[i]['record_time'][0:10] == '2019-06-13'):
#                     ten_sf.append('['+str(setting[i]['source_ip'])+',13]')
#
#
# a=Counter(ten_fournigh1)
# b=Counter(ten_twofour)
# c=Counter(ttz_one)
# d=Counter(oez_one)
# e=Counter(ten_tn)
# f=Counter(ten_fournigh2)
# g=Counter(ten_fs)
# h=Counter(ten_sz)
# k=Counter(ten_ff)
# j=Counter(ten_sf)
#
# print('10.49:', a.most_common(25),'\n')
# print('10.24:', b.most_common(25),'\n')
# print('220.1:', c.most_common(25),'\n')
# print('180.1:', d.most_common(25),'\n')
# print('10.39:', e.most_common(25),'\n')
#
# print('10.49:', f.most_common(25),'\n')
# print('10.56:', g.most_common(25),'\n')
# print('10.60:', h.most_common(25),'\n')
# print('10.54:', k.most_common(25),'\n')
# print('10.64:', j.most_common(25),'\n')

# var1049=[]
# var1024=[]
# var2201=[]
# var1801=[]
# var1039=[]
#
# var10491=[]
# var1056=[]
# var1060=[]
# var1054=[]
# var1064=[]
# var=[]
# all=[ a.most_common(25), b.most_common(25), c.most_common(25), d.most_common(25), e.most_common(25), f.most_common(25), g.most_common(25), h.most_common(25), k.most_common(25), j.most_common(25)]
# for k in all:
#     for i in range(0,len(k)):
#         #print(var10_49[i][0][1:-3]))
#         var.append('['+str( k[i][0][1:-3])+'13,'+str(k[i][1])+ ']')
#
# print(var,'\n')
#

map_data =[
    [0, 13, 162991], [1, 13, 123796], [8, 13, 46351], [7, 13, 43196], [4, 13, 42747], [6, 13, 36773], [3, 13, 34777],
    [16, 13, 26345], [10, 13, 25175], [11, 13, 24420], [15, 13, 22143], [19, 13, 21740], [12, 13, 21194],
    [17, 13, 19564], [9, 13, 19048], [20, 13, 17096], [13, 13, 16927], [18, 13, 14963],
    [1, 12, 184347], [0, 12, 163847], [10, 12, 45706], [3, 12, 35218], [8, 12, 32567], [5, 12, 32441], [6, 12, 28518],
    [21, 12, 26318], [9, 12, 24845], [13, 12, 22554], [19, 12, 22088], [4, 12, 21065], [12, 12, 20468], [20, 12, 19404],
    [11, 12, 17608], [14, 12, 17446], [7, 12, 17356], [2, 12, 16400], [15, 12, 16352],
[0,11,164063], [1,11,73544], [4,11,36438], [3,11,35121],  [6,11,28720], [16,11,28336], [9,11,26489], [15,11,21670], [8,11,21551], [5,11,18650],[12,11,17810], [14,11,17460], [2,11,17066], [21,11,16114], [18,11,15640], [11,11,15332], [7,11,15279], [19,11,14832], [23,11,14462],
    [0, 10, 168167], [3, 10, 34713], [1, 10, 34387], [6, 10, 30456], [9, 10, 26939], [17, 10, 21249], [10, 10, 19008],
    [15, 10, 18052], [14, 10, 17748], [24, 10, 16880], [7, 10, 15252], [12, 10, 15058], [21, 10, 14699],
    [18, 10, 14502], [5, 10, 14171], [20, 10, 14056], [23, 10, 13293], [2, 10, 12994], [11, 10, 12065], [16, 10, 11816],
    [0, 9, 179737], [3, 9, 37128], [22, 9, 11066], [13, 9, 6056],
[0,8,180177], [3,8,37196], [8,8,13961], [22,8,11086], [13,8,6151],
    [0, 7, 181636], [3, 7, 37554], [22, 7, 11683], [13, 7, 6503],
    [0, 6, 170913], [1, 6, 64999], [3, 6, 36559], [6, 6, 30526], [5, 6, 28074], [11, 6, 25775], [4, 6, 24267],
    [9, 6, 19000], [13, 6, 18772], [7, 6, 18717], [23, 6, 18184], [16, 6, 18025], [12, 6, 16111], [10, 6, 15832],
    [14, 6, 15410], [18, 6, 14784], [20, 6, 14070], [19, 6, 13839], [15, 6, 13597], [2, 6, 10900],
    [1, 5, 457375], [2, 5, 146823], [0, 5, 145534], [3, 5, 114422], [4, 5, 96502], [6, 5, 92405], [5, 5, 86056],
    [8, 5, 51922], [14, 5, 31668], [9, 5, 17153], [11, 5, 13373], [13, 5, 8443], [15, 5, 6900], [17, 5, 6636],
    [10, 5, 4099], [20, 5, 2533], [19, 5, 1740], [12, 5, 1513], [23, 5, 1459], [18, 5, 1449], [21, 5, 1252],
    [16, 5, 900],
    [0, 4, 162405], [2, 4, 94704], [1, 4, 55848], [3, 4, 34950], [4, 4, 30645], [6, 4, 28613], [5, 4, 26692],
    [14, 4, 24966], [13, 4, 23692], [11, 4, 22482], [23, 4, 21779], [17, 4, 19665], [10, 4, 19378], [12, 4, 18464],
    [9, 4, 17055], [20, 4, 15797], [24, 4, 15445], [21, 4, 15076], [18, 4, 13663],
    [0, 3, 156772], [1, 3, 49931], [7, 3, 40247], [3, 3, 34681], [5, 3, 34363], [6, 3, 25610], [17, 3, 19973],
    [4, 3, 19845], [10, 3, 18815], [14, 3, 18007], [13, 3, 17712], [9, 3, 16514], [15, 3, 16456], [11, 3, 16179],
    [23, 3, 15448], [12, 3, 15213], [21, 3, 14335], [24, 3, 14044], [8, 3, 14026], [18, 3, 13979], [19, 3, 13416],
    [20, 3, 12280],
    [0, 2, 166440], [3, 2, 35316], [8, 2, 23034], [11, 2, 10030], [21, 2, 9955], [16, 2, 6287], [12, 2, 6210],
    [13, 2, 6079], [24, 2, 2776],
    [0, 1, 166367], [3, 1, 35238], [8, 1, 21212], [9, 1, 20232], [12, 1, 10578], [11, 1, 9517], [21, 1, 7015],
    [13, 1, 6416], [1, 1, 2909],
    [0, 0, 158617], [4, 0, 50534], [7, 0, 47030], [3, 0, 34914], [1, 0, 25566], [6, 0, 24835], [12, 0, 20093],
    [9, 0, 20039], [14, 0, 18840], [10, 0, 18065], [16, 0, 17322], [15, 0, 16223], [19, 0, 16151], [13, 0, 15269],
    [8, 0, 15253], [18, 0, 13939], [20, 0, 10807],

]

for i in map_data:
    temp=i[0]
    i[0]=i[1]
    i[1]=temp

print(map_data)